{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaida\\\\Downloads\\\\TEST\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Create axios instance with base URL\n  const api = axios.create({\n    baseURL: \"http://localhost:5000\",\n    withCredentials: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Add request interceptor to add token to headers\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Add response interceptor to handle 401 errors\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    return Promise.reject(error);\n  });\n  const checkUser = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      // Set the token in the headers before making the request\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      const response = await api.get(\"/api/auth/me\");\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      } else {\n        handleLogout();\n      }\n    } catch (error) {\n      console.error(\"Error checking user:\", error);\n      handleLogout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Initialize authentication check\n  useEffect(() => {\n    let mounted = true;\n    const initializeAuth = async () => {\n      if (mounted) {\n        await checkUser();\n      }\n    };\n    initializeAuth();\n    return () => {\n      mounted = false;\n    };\n  }, [checkUser]);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const token = response.data.token;\n        localStorage.setItem(\"token\", token);\n        // Set the token in the headers after successful login\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n        toast.success(\"Login successful!\");\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Login error:\", error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\");\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/api/auth/register\", {\n        name: userData.name,\n        email: userData.email,\n        password: userData.password,\n        phone: userData.phone,\n        role: userData.role === \"admin\" ? 0 : 1\n      });\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return res.data;\n      }\n    } catch (error) {\n      console.error(\"Register error:\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.get(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const res = await api.put(\"/api/auth/updatedetails\", userData);\n      setUser(res.data.data);\n      return res.data;\n    } catch (error) {\n      console.error(\"Update profile error:\", error);\n      throw error;\n    }\n  };\n  const updatePassword = async passwordData => {\n    try {\n      const res = await api.put(\"/api/auth/updatepassword\", passwordData);\n      return res.data;\n    } catch (error) {\n      console.error(\"Update password error:\", error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    api,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useCallback","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","checkUser","defaults","common","get","data","success","handleLogout","console","mounted","initializeAuth","login","email","password","post","setItem","_error$response2","_error$response2$data","message","register","userData","res","name","phone","role","logout","updateProfile","put","updatePassword","passwordData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zaida/Downloads/TEST/client/src/context/AuthContext.js"],"sourcesContent":["import {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Create axios instance with base URL\r\n  const api = axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n    withCredentials: true,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  // Add request interceptor to add token to headers\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // Add response interceptor to handle 401 errors\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem(\"token\");\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const checkUser = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set the token in the headers before making the request\r\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n      const response = await api.get(\"/api/auth/me\");\r\n      if (response.data.success) {\r\n        setUser(response.data.data);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        handleLogout();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking user:\", error);\r\n      handleLogout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize authentication check\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializeAuth = async () => {\r\n      if (mounted) {\r\n        await checkUser();\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [checkUser]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post(\"/api/auth/login\", { email, password });\r\n      if (response.data.success) {\r\n        const token = response.data.token;\r\n        localStorage.setItem(\"token\", token);\r\n        // Set the token in the headers after successful login\r\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n        setUser(response.data.data);\r\n        setIsAuthenticated(true);\r\n        toast.success(\"Login successful!\");\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast.error(error.response?.data?.message || \"Login failed\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post(\"/api/auth/register\", {\r\n        name: userData.name,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        phone: userData.phone,\r\n        role: userData.role === \"admin\" ? 0 : 1,\r\n      });\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Register error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.get(\"/api/auth/logout\");\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      localStorage.removeItem(\"token\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const res = await api.put(\"/api/auth/updatedetails\", userData);\r\n      setUser(res.data.data);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(\"Update profile error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (passwordData) => {\r\n    try {\r\n      const res = await api.put(\"/api/auth/updatepassword\", passwordData);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(\"Update password error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    api,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    updatePassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}