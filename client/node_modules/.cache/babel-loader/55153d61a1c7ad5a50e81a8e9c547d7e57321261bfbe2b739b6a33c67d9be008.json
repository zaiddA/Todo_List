{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaida\\\\Downloads\\\\TEST\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Create API instance with base URL\n  const api = axios.create({\n    baseURL: \"http://localhost:5000\",\n    withCredentials: true\n  });\n\n  // Add request interceptor to include token in headers\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Add response interceptor to handle 401 errors\n  api.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      handleLogout();\n    }\n    return Promise.reject(error);\n  });\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const checkUser = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await api.get(\"/api/auth/me\");\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      } else {\n        handleLogout();\n      }\n    } catch (error) {\n      console.error(\"Error checking user:\", error);\n      handleLogout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkUser();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      if (response.data.success) {\n        var _userData$role;\n        const token = response.data.token;\n        const userData = response.data.data;\n        if (!userData) {\n          throw new Error('No user data received from server');\n        }\n\n        // Ensure user data has a role, defaulting to 1 (user) if not specified\n        const userWithRole = {\n          ...userData,\n          role: (_userData$role = userData.role) !== null && _userData$role !== void 0 ? _userData$role : 1\n        };\n        localStorage.setItem(\"token\", token);\n        setUser(userWithRole);\n        setIsAuthenticated(true);\n        toast.success(\"Login successful!\");\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Login error:\", error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\");\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post(\"/api/auth/register\", userData);\n      if (response.data.success) {\n        toast.success(\"Registration successful! Please log in.\");\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Registration error:\", error);\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Registration failed\");\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      // Clear the token from localStorage and reset the auth state\n      handleLogout();\n      toast.success(\"Logged out successfully!\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      // Even if there's an error, we still want to clear the auth state\n      handleLogout();\n    }\n  };\n  const updateUserDetails = async userData => {\n    try {\n      const response = await api.put(\"/api/auth/updatedetails\", userData);\n      if (response.data.success) {\n        setUser(response.data.data);\n        toast.success(\"Profile updated successfully!\");\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Update error:\", error);\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Update failed\");\n      return false;\n    }\n  };\n  const updatePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await api.put(\"/api/auth/updatepassword\", {\n        currentPassword,\n        newPassword\n      });\n      if (response.data.success) {\n        toast.success(\"Password updated successfully!\");\n        return true;\n      }\n      return false;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Password update error:\", error);\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Password update failed\");\n      return false;\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    api,\n    login,\n    register,\n    logout,\n    updateUserDetails,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","api","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","handleLogout","removeItem","checkUser","get","data","success","console","login","email","password","post","_userData$role","userData","userWithRole","role","setItem","_error$response2","_error$response2$data","message","register","_error$response3","_error$response3$data","logout","updateUserDetails","put","_error$response4","_error$response4$data","updatePassword","currentPassword","newPassword","_error$response5","_error$response5$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zaida/Downloads/TEST/client/src/context/AuthContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Create API instance with base URL\r\n  const api = axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n    withCredentials: true,\r\n  });\r\n\r\n  // Add request interceptor to include token in headers\r\n  api.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // Add response interceptor to handle 401 errors\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        handleLogout();\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const checkUser = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.get(\"/api/auth/me\");\r\n      if (response.data.success) {\r\n        setUser(response.data.data);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        handleLogout();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking user:\", error);\r\n      handleLogout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkUser();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post(\"/api/auth/login\", { email, password });\r\n      if (response.data.success) {\r\n        const token = response.data.token;\r\n        const userData = response.data.data;\r\n        \r\n        if (!userData) {\r\n          throw new Error('No user data received from server');\r\n        }\r\n\r\n        // Ensure user data has a role, defaulting to 1 (user) if not specified\r\n        const userWithRole = {\r\n          ...userData,\r\n          role: userData.role ?? 1\r\n        };\r\n\r\n        localStorage.setItem(\"token\", token);\r\n        setUser(userWithRole);\r\n        setIsAuthenticated(true);\r\n        toast.success(\"Login successful!\");\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast.error(error.response?.data?.message || \"Login failed\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post(\"/api/auth/register\", userData);\r\n      if (response.data.success) {\r\n        toast.success(\"Registration successful! Please log in.\");\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      toast.error(error.response?.data?.message || \"Registration failed\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Clear the token from localStorage and reset the auth state\r\n      handleLogout();\r\n      toast.success(\"Logged out successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n      // Even if there's an error, we still want to clear the auth state\r\n      handleLogout();\r\n    }\r\n  };\r\n\r\n  const updateUserDetails = async (userData) => {\r\n    try {\r\n      const response = await api.put(\"/api/auth/updatedetails\", userData);\r\n      if (response.data.success) {\r\n        setUser(response.data.data);\r\n        toast.success(\"Profile updated successfully!\");\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Update error:\", error);\r\n      toast.error(error.response?.data?.message || \"Update failed\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      const response = await api.put(\"/api/auth/updatepassword\", {\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n      if (response.data.success) {\r\n        toast.success(\"Password updated successfully!\");\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Password update error:\", error);\r\n      toast.error(error.response?.data?.message || \"Password update failed\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    api,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUserDetails,\r\n    updatePassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}