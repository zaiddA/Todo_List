{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zaida\\\\Downloads\\\\TEST\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Create axios instance with base URL\n  const api = axios.create({\n    baseURL: \"http://localhost:5000/api\"\n  });\n\n  // Add request interceptor to add token to headers\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n  useEffect(() => {\n    checkUser();\n  }, []);\n  const checkUser = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setLoading(false);\n        setIsAuthenticated(false);\n        return;\n      }\n      const res = await api.get(\"/auth/me\");\n      setUser(res.data.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Error checking user:\", error);\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        email,\n        password\n      });\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return res.data;\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const res = await api.post(\"/auth/register\", {\n        name: userData.name,\n        email: userData.email,\n        password: userData.password,\n        phone: userData.phone,\n        role: userData.role === \"admin\" ? 0 : 1\n      });\n      if (res.data.token) {\n        localStorage.setItem(\"token\", res.data.token);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return res.data;\n      }\n    } catch (error) {\n      console.error(\"Register error:\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.get(\"/auth/logout\");\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n  };\n  const updateProfile = async userData => {\n    try {\n      const res = await api.put(\"/auth/updatedetails\", userData);\n      setUser(res.data.data);\n      return res.data;\n    } catch (error) {\n      console.error(\"Update profile error:\", error);\n      throw error;\n    }\n  };\n  const updatePassword = async passwordData => {\n    try {\n      const res = await api.put(\"/auth/updatepassword\", passwordData);\n      return res.data;\n    } catch (error) {\n      console.error(\"Update password error:\", error);\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","checkUser","res","get","data","error","console","removeItem","login","email","password","post","setItem","register","userData","name","phone","role","logout","updateProfile","put","updatePassword","passwordData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zaida/Downloads/TEST/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Create axios instance with base URL\r\n  const api = axios.create({\r\n    baseURL: \"http://localhost:5000/api\",\r\n  });\r\n\r\n  // Add request interceptor to add token to headers\r\n  api.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkUser();\r\n  }, []);\r\n\r\n  const checkUser = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        setLoading(false);\r\n        setIsAuthenticated(false);\r\n        return;\r\n      }\r\n\r\n      const res = await api.get(\"/auth/me\");\r\n      setUser(res.data.data);\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error(\"Error checking user:\", error);\r\n      localStorage.removeItem(\"token\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await api.post(\"/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post(\"/auth/register\", {\r\n        name: userData.name,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        phone: userData.phone,\r\n        role: userData.role === \"admin\" ? 0 : 1,\r\n      });\r\n\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        setUser(res.data.user);\r\n        setIsAuthenticated(true);\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Register error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.get(\"/auth/logout\");\r\n      localStorage.removeItem(\"token\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const res = await api.put(\"/auth/updatedetails\", userData);\r\n      setUser(res.data.data);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(\"Update profile error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (passwordData) => {\r\n    try {\r\n      const res = await api.put(\"/auth/updatepassword\", passwordData);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error(\"Update password error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    updatePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}